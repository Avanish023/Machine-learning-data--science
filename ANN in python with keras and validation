# Building ANN for Classification
# Installing Tenserflow
# Installing Keras

#data preprocessing & cleaning
#importing library
import numpy as np 
import matplotlib.pyplot as plt 
import pandas as pd 

#importingdataset
dataset= pd.read_csv('Churn_Modelling.csv')
X = dataset.iloc[:,3:13].values
Y = dataset.iloc[:,13].values

#onehotencoding 
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_country = LabelEncoder()
X[:,1]=labelencoder_country.fit_transform(X[:,1])
labelencoder_gender= LabelEncoder()
X[:,2]=labelencoder_gender.fit_transform(X[:,2])
onehotencoder= OneHotEncoder(categorical_features=[1])
X=onehotencoder.fit_transform(X).toarray()
X=X[:,1:]

#Spliting dataset into training set and test set
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=.2,random_state=0)


#feature_scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.fit_transform(X_test)

#importing keras
import keras
from keras.models import Sequential
from keras.layers import Dense



#intialising the ANN
classifier = Sequential()
#First hidden layer
classifier.add(Dense(6,input_shape=(11,),activation='relu',kernel_initializer='uniform'))
#second hidden layer
classifier.add(Dense(6,activation='relu',kernel_initializer='uniform'))
#output layer
classifier.add(Dense(1,activation='sigmoid',kernel_initializer='uniform'))
#Compiling ann
classifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])
#fitting ann to training set 
classifier.fit(X_train,Y_train,batch_size= 10,epochs=100)

#prediction
y_pred = classifier.predict(X_test)


y_pred=(y_pred > .5)
      
     
#checking values
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(Y_test,y_pred)


#Model Validation
#K-fold cross validation
from  keras.wrappers.scikit_learn  import KerasClassifier 
from sklearn.model_selection import cross_val_score
from keras.models import Sequential
from keras.layers import Dense
   def build_classifier():
       classifier = Sequential()
       classifier.add(Dense(6,input_shape=(11,),activation='relu',kernel_initializer='uniform'))
       classifier.add(Dense(6,activation='relu',kernel_initializer='uniform'))
       classifier.add(Dense(1,activation='sigmoid',kernel_initializer='uniform'))
       classifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])
       return classifier 
classifier = KerasClassifier(build_fn =build_classifier,batch_size= 10,nb_epoch=100)
accuracies = cross_val_score(estimator=classifier,X=X_train,y=Y_train,cv=10,n_jobs=-1)
