#building CNN
#importing keras package 

from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

#intialising classifier
classifier = Sequential()
#intialising convolution layer
classifier.add(Conv2D(32,3,3,input_shape=(64,64,3),activation='relu'))
#pooling
classifier.add(MaxPooling2D(pool_size=[2,2]))
#Flattening 
classifier.add(Flatten())
#creating ann
classifier.add(Dense(128,activation='relu'))
#output layer
classifier.add(Dense(1,activation='sigmoid'))
#Compiling ann
classifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])


#imagepreprocessing or augmentation 
#taken from keras documentation
from keras.preprocessing.image import ImageDataGenerator
train_datagen = ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)
test_datagen = ImageDataGenerator(rescale=1./255)
train_set = train_datagen.flow_from_directory('Convolutional_Neural_Networks/dataset/training_set',target_size=(64,64),batch_size=32,class_mode='binary')
test_set = test_datagen.flow_from_directory('Convolutional_Neural_Networks/dataset/test_set',target_size=(64,64), batch_size=32,class_mode='binary')
classifier.fit_generator(train_set,steps_per_epoch=8000,epochs=2,validation_data=test_set,validation_steps=2000)




